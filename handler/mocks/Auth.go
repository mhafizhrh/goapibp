// Code generated by mockery v2.36.0. DO NOT EDIT.

package mocks

import (
	model "goapibp/model"

	mock "github.com/stretchr/testify/mock"

	response "goapibp/response"
)

// Auth is an autogenerated mock type for the Auth type
type Auth struct {
	mock.Mock
}

// Login provides a mock function with given fields: request
func (_m *Auth) Login(request *model.AuthLoginRequest) response.CustomResponse {
	ret := _m.Called(request)

	var r0 response.CustomResponse
	if rf, ok := ret.Get(0).(func(*model.AuthLoginRequest) response.CustomResponse); ok {
		r0 = rf(request)
	} else {
		r0 = ret.Get(0).(response.CustomResponse)
	}

	return r0
}

// NewAuth creates a new instance of Auth. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAuth(t interface {
	mock.TestingT
	Cleanup(func())
}) *Auth {
	mock := &Auth{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
